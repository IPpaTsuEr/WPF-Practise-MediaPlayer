<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MediaPlayer.Styles">

    <Style x:Key="NothingButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SureButtonForeground}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid       Opacity="{TemplateBinding Opacity}"
                                Margin="{TemplateBinding Padding}"
                                TextElement.Foreground="{TemplateBinding Foreground}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border Name="Active_Border" Background="Transparent"></Border>
                        </Border>

                        <Border BorderThickness="0" Margin="{TemplateBinding Margin}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter></ContentPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BaseButton" TargetType="Button">
        <Setter Property="Height" Value="32"></Setter>
        <Setter Property="Background" Value="{DynamicResource BaseButtonBackground}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseButtonBorderground}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource BaseButtonForeground}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid       Opacity="{TemplateBinding Opacity}"
                                Margin="{TemplateBinding Padding}"
                                TextElement.Foreground="{TemplateBinding Foreground}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border Name="Active_Border" Background="Transparent"></Border>
                        </Border>
                        
                        <Border BorderThickness="0" Margin="{TemplateBinding Margin}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter></ContentPresenter>
                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="{DynamicResource BaseButtonHoverground}" TargetName="Active_Border"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BaseButtonPressedground}" TargetName="Active_Border"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SureButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SureButtonBorderground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource SureButtonBackground}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SureButtonForeground}"></Setter>
        
    </Style>
    
    <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource CanceButtonBorderground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource CanceButtonBackground}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource CanceButtonForeground}"></Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Content" Value="X"></Setter>
        <Setter Property="Height" Value="32"></Setter>
        <Setter Property="Width" Value="32"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource CloseButtonForeground}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="{TemplateBinding Opacity}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="{DynamicResource CloseButtonBackground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CloseButtonBackground}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource IconFont}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"></Setter>
        <Setter Property="FontSize"   Value="14"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True"> 
                <Setter Property="Foreground" Value="{DynamicResource ControlBarHoverForeground}"></Setter>
                
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SideBar" TargetType="ListView">
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        
    </Style>
    
    <Style x:Key="SideBarItem" TargetType="ListViewItem">
        <Setter Property="Background" Value="{StaticResource ListItemBackground}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            >
                        <ContentPresenter Margin="{TemplateBinding Margin}"></ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ListItemHoverground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedground}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowEffect x:Key="InnerMaskShadow" Color="{StaticResource InnerShadowColor }" 
                      BlurRadius="6" ShadowDepth="0" Direction="0"></DropShadowEffect>

    <DropShadowEffect x:Key="OuterWindowShadow" Color="{StaticResource OuterShadowColor}"
                      BlurRadius="12" ShadowDepth="0" Direction="0"></DropShadowEffect>
    
</ResourceDictionary>